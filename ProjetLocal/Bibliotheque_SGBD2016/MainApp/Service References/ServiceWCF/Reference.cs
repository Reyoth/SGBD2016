//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MainApp.ServiceWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/BiblioService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceWCF.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        MainApp.ServiceWCF.CompositeType GetDataUsingDataContract(MainApp.ServiceWCF.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<MainApp.ServiceWCF.CompositeType> GetDataUsingDataContractAsync(MainApp.ServiceWCF.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EXE_CreerExemplaire", ReplyAction="http://tempuri.org/IService1/EXE_CreerExemplaireResponse")]
        void EXE_CreerExemplaire(string code, System.DateTime DateAchat, byte indisponible, int BibId, int LivId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EXE_CreerExemplaire", ReplyAction="http://tempuri.org/IService1/EXE_CreerExemplaireResponse")]
        System.Threading.Tasks.Task EXE_CreerExemplaireAsync(string code, System.DateTime DateAchat, byte indisponible, int BibId, int LivId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllExemplairesAllBib", ReplyAction="http://tempuri.org/IService1/AllExemplairesAllBibResponse")]
        System.Data.DataSet AllExemplairesAllBib(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllExemplairesAllBib", ReplyAction="http://tempuri.org/IService1/AllExemplairesAllBibResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AllExemplairesAllBibAsync(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllExemplairesByBibId", ReplyAction="http://tempuri.org/IService1/AllExemplairesByBibIdResponse")]
        System.Data.DataSet AllExemplairesByBibId(System.Data.DataSet ds, int BibId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllExemplairesByBibId", ReplyAction="http://tempuri.org/IService1/AllExemplairesByBibIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AllExemplairesByBibIdAsync(System.Data.DataSet ds, int BibId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllRetardataires", ReplyAction="http://tempuri.org/IService1/AllRetardatairesResponse")]
        System.Data.DataSet AllRetardataires(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllRetardataires", ReplyAction="http://tempuri.org/IService1/AllRetardatairesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AllRetardatairesAsync(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllLivres", ReplyAction="http://tempuri.org/IService1/AllLivresResponse")]
        System.Data.DataSet AllLivres(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllLivres", ReplyAction="http://tempuri.org/IService1/AllLivresResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AllLivresAsync(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RetournerExemplaire", ReplyAction="http://tempuri.org/IService1/RetournerExemplaireResponse")]
        void RetournerExemplaire(int exemplaireId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RetournerExemplaire", ReplyAction="http://tempuri.org/IService1/RetournerExemplaireResponse")]
        System.Threading.Tasks.Task RetournerExemplaireAsync(int exemplaireId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllLecteurs", ReplyAction="http://tempuri.org/IService1/AllLecteursResponse")]
        System.Data.DataSet AllLecteurs(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllLecteurs", ReplyAction="http://tempuri.org/IService1/AllLecteursResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AllLecteursAsync(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllEmpruntsEnCours", ReplyAction="http://tempuri.org/IService1/AllEmpruntsEnCoursResponse")]
        System.Data.DataSet AllEmpruntsEnCours(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllEmpruntsEnCours", ReplyAction="http://tempuri.org/IService1/AllEmpruntsEnCoursResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AllEmpruntsEnCoursAsync(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllReservationsEnCours", ReplyAction="http://tempuri.org/IService1/AllReservationsEnCoursResponse")]
        System.Data.DataSet AllReservationsEnCours(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllReservationsEnCours", ReplyAction="http://tempuri.org/IService1/AllReservationsEnCoursResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AllReservationsEnCoursAsync(System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LivreByISBN", ReplyAction="http://tempuri.org/IService1/LivreByISBNResponse")]
        System.Data.DataSet LivreByISBN(System.Data.DataSet ds, string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LivreByISBN", ReplyAction="http://tempuri.org/IService1/LivreByISBNResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> LivreByISBNAsync(System.Data.DataSet ds, string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LivreByTitre", ReplyAction="http://tempuri.org/IService1/LivreByTitreResponse")]
        System.Data.DataSet LivreByTitre(System.Data.DataSet ds, string titre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LivreByTitre", ReplyAction="http://tempuri.org/IService1/LivreByTitreResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> LivreByTitreAsync(System.Data.DataSet ds, string titre);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MainApp.ServiceWCF.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MainApp.ServiceWCF.IService1>, MainApp.ServiceWCF.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public MainApp.ServiceWCF.CompositeType GetDataUsingDataContract(MainApp.ServiceWCF.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<MainApp.ServiceWCF.CompositeType> GetDataUsingDataContractAsync(MainApp.ServiceWCF.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public void EXE_CreerExemplaire(string code, System.DateTime DateAchat, byte indisponible, int BibId, int LivId) {
            base.Channel.EXE_CreerExemplaire(code, DateAchat, indisponible, BibId, LivId);
        }
        
        public System.Threading.Tasks.Task EXE_CreerExemplaireAsync(string code, System.DateTime DateAchat, byte indisponible, int BibId, int LivId) {
            return base.Channel.EXE_CreerExemplaireAsync(code, DateAchat, indisponible, BibId, LivId);
        }
        
        public System.Data.DataSet AllExemplairesAllBib(System.Data.DataSet ds) {
            return base.Channel.AllExemplairesAllBib(ds);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AllExemplairesAllBibAsync(System.Data.DataSet ds) {
            return base.Channel.AllExemplairesAllBibAsync(ds);
        }
        
        public System.Data.DataSet AllExemplairesByBibId(System.Data.DataSet ds, int BibId) {
            return base.Channel.AllExemplairesByBibId(ds, BibId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AllExemplairesByBibIdAsync(System.Data.DataSet ds, int BibId) {
            return base.Channel.AllExemplairesByBibIdAsync(ds, BibId);
        }
        
        public System.Data.DataSet AllRetardataires(System.Data.DataSet ds) {
            return base.Channel.AllRetardataires(ds);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AllRetardatairesAsync(System.Data.DataSet ds) {
            return base.Channel.AllRetardatairesAsync(ds);
        }
        
        public System.Data.DataSet AllLivres(System.Data.DataSet ds) {
            return base.Channel.AllLivres(ds);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AllLivresAsync(System.Data.DataSet ds) {
            return base.Channel.AllLivresAsync(ds);
        }
        
        public void RetournerExemplaire(int exemplaireId) {
            base.Channel.RetournerExemplaire(exemplaireId);
        }
        
        public System.Threading.Tasks.Task RetournerExemplaireAsync(int exemplaireId) {
            return base.Channel.RetournerExemplaireAsync(exemplaireId);
        }
        
        public System.Data.DataSet AllLecteurs(System.Data.DataSet ds) {
            return base.Channel.AllLecteurs(ds);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AllLecteursAsync(System.Data.DataSet ds) {
            return base.Channel.AllLecteursAsync(ds);
        }
        
        public System.Data.DataSet AllEmpruntsEnCours(System.Data.DataSet ds) {
            return base.Channel.AllEmpruntsEnCours(ds);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AllEmpruntsEnCoursAsync(System.Data.DataSet ds) {
            return base.Channel.AllEmpruntsEnCoursAsync(ds);
        }
        
        public System.Data.DataSet AllReservationsEnCours(System.Data.DataSet ds) {
            return base.Channel.AllReservationsEnCours(ds);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AllReservationsEnCoursAsync(System.Data.DataSet ds) {
            return base.Channel.AllReservationsEnCoursAsync(ds);
        }
        
        public System.Data.DataSet LivreByISBN(System.Data.DataSet ds, string isbn) {
            return base.Channel.LivreByISBN(ds, isbn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LivreByISBNAsync(System.Data.DataSet ds, string isbn) {
            return base.Channel.LivreByISBNAsync(ds, isbn);
        }
        
        public System.Data.DataSet LivreByTitre(System.Data.DataSet ds, string titre) {
            return base.Channel.LivreByTitre(ds, titre);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LivreByTitreAsync(System.Data.DataSet ds, string titre) {
            return base.Channel.LivreByTitreAsync(ds, titre);
        }
    }
}
