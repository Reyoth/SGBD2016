//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SGBD2016_BibliothequeEntities : DbContext
    {
        public SGBD2016_BibliothequeEntities()
            : base("name=SGBD2016_BibliothequeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrateuf> Administrateufs { get; set; }
        public virtual DbSet<Auteur> Auteurs { get; set; }
        public virtual DbSet<Bibliotheque> Bibliotheques { get; set; }
        public virtual DbSet<Emprunt> Emprunts { get; set; }
        public virtual DbSet<Exemplaire> Exemplaires { get; set; }
        public virtual DbSet<Lecteur> Lecteurs { get; set; }
        public virtual DbSet<Livre> Livres { get; set; }
        public virtual DbSet<Reservation> Reservations { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Tarif> Tarifs { get; set; }
    
        public virtual ObjectResult<EMP_AllEmpruntsAllBib_Result> EMP_AllEmpruntsAllBib()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EMP_AllEmpruntsAllBib_Result>("EMP_AllEmpruntsAllBib");
        }
    
        public virtual ObjectResult<EMP_AllEmpruntsByBIB_Id_Result> EMP_AllEmpruntsByBIB_Id(Nullable<int> bib_Id)
        {
            var bib_IdParameter = bib_Id.HasValue ?
                new ObjectParameter("Bib_Id", bib_Id) :
                new ObjectParameter("Bib_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EMP_AllEmpruntsByBIB_Id_Result>("EMP_AllEmpruntsByBIB_Id", bib_IdParameter);
        }
    
        public virtual ObjectResult<EMP_AllEmpruntsByLEC_Id_Result> EMP_AllEmpruntsByLEC_Id(Nullable<int> lec_Id)
        {
            var lec_IdParameter = lec_Id.HasValue ?
                new ObjectParameter("Lec_Id", lec_Id) :
                new ObjectParameter("Lec_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EMP_AllEmpruntsByLEC_Id_Result>("EMP_AllEmpruntsByLEC_Id", lec_IdParameter);
        }
    
        public virtual ObjectResult<EMP_ListeRetardatairesAllBib_Result> EMP_ListeRetardatairesAllBib()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EMP_ListeRetardatairesAllBib_Result>("EMP_ListeRetardatairesAllBib");
        }
    
        public virtual ObjectResult<EXE_AllExemplaireBIB_Id_Result> EXE_AllExemplaireBIB_Id(Nullable<int> bib_Id)
        {
            var bib_IdParameter = bib_Id.HasValue ?
                new ObjectParameter("Bib_Id", bib_Id) :
                new ObjectParameter("Bib_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EXE_AllExemplaireBIB_Id_Result>("EXE_AllExemplaireBIB_Id", bib_IdParameter);
        }
    
        public virtual ObjectResult<EXE_AllExemplaireByLIV_Id_Result> EXE_AllExemplaireByLIV_Id(Nullable<int> liv_Id)
        {
            var liv_IdParameter = liv_Id.HasValue ?
                new ObjectParameter("Liv_Id", liv_Id) :
                new ObjectParameter("Liv_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EXE_AllExemplaireByLIV_Id_Result>("EXE_AllExemplaireByLIV_Id", liv_IdParameter);
        }
    
        public virtual int EXE_CreerExemplaire(string code, Nullable<System.DateTime> dateAchat, Nullable<bool> indisponible, Nullable<int> bib_Id, Nullable<int> liv_Id)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var dateAchatParameter = dateAchat.HasValue ?
                new ObjectParameter("DateAchat", dateAchat) :
                new ObjectParameter("DateAchat", typeof(System.DateTime));
    
            var indisponibleParameter = indisponible.HasValue ?
                new ObjectParameter("Indisponible", indisponible) :
                new ObjectParameter("Indisponible", typeof(bool));
    
            var bib_IdParameter = bib_Id.HasValue ?
                new ObjectParameter("Bib_Id", bib_Id) :
                new ObjectParameter("Bib_Id", typeof(int));
    
            var liv_IdParameter = liv_Id.HasValue ?
                new ObjectParameter("Liv_Id", liv_Id) :
                new ObjectParameter("Liv_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EXE_CreerExemplaire", codeParameter, dateAchatParameter, indisponibleParameter, bib_IdParameter, liv_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> EXE_EmprunterExemplaire(Nullable<int> exe_Id, Nullable<int> lec_Id)
        {
            var exe_IdParameter = exe_Id.HasValue ?
                new ObjectParameter("Exe_Id", exe_Id) :
                new ObjectParameter("Exe_Id", typeof(int));
    
            var lec_IdParameter = lec_Id.HasValue ?
                new ObjectParameter("Lec_Id", lec_Id) :
                new ObjectParameter("Lec_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("EXE_EmprunterExemplaire", exe_IdParameter, lec_IdParameter);
        }
    
        public virtual int EXE_RetournerExempplaire(Nullable<int> exemplaireId)
        {
            var exemplaireIdParameter = exemplaireId.HasValue ?
                new ObjectParameter("ExemplaireId", exemplaireId) :
                new ObjectParameter("ExemplaireId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EXE_RetournerExempplaire", exemplaireIdParameter);
        }
    
        public virtual ObjectResult<LIV_LivreByISBN_Result> LIV_LivreByISBN(string iSBN)
        {
            var iSBNParameter = iSBN != null ?
                new ObjectParameter("ISBN", iSBN) :
                new ObjectParameter("ISBN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LIV_LivreByISBN_Result>("LIV_LivreByISBN", iSBNParameter);
        }
    
        public virtual ObjectResult<LIV_LivreByTitle_Result> LIV_LivreByTitle(string liv_Title)
        {
            var liv_TitleParameter = liv_Title != null ?
                new ObjectParameter("Liv_Title", liv_Title) :
                new ObjectParameter("Liv_Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LIV_LivreByTitle_Result>("LIV_LivreByTitle", liv_TitleParameter);
        }
    
        public virtual ObjectResult<RES_ListeReservationsByLEC_Id_Result> RES_ListeReservationsByLEC_Id()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RES_ListeReservationsByLEC_Id_Result>("RES_ListeReservationsByLEC_Id");
        }
    
        public virtual ObjectResult<RES_ListeReservationsDisponibleByLEC_Id_Result> RES_ListeReservationsDisponibleByLEC_Id(Nullable<int> idLecteur)
        {
            var idLecteurParameter = idLecteur.HasValue ?
                new ObjectParameter("IdLecteur", idLecteur) :
                new ObjectParameter("IdLecteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RES_ListeReservationsDisponibleByLEC_Id_Result>("RES_ListeReservationsDisponibleByLEC_Id", idLecteurParameter);
        }
    
        public virtual int RES_ReserverLivre(Nullable<int> liv_Id, Nullable<int> lec_Id)
        {
            var liv_IdParameter = liv_Id.HasValue ?
                new ObjectParameter("Liv_Id", liv_Id) :
                new ObjectParameter("Liv_Id", typeof(int));
    
            var lec_IdParameter = lec_Id.HasValue ?
                new ObjectParameter("Lec_Id", lec_Id) :
                new ObjectParameter("Lec_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RES_ReserverLivre", liv_IdParameter, lec_IdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
